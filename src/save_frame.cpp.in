#include "opencv2/opencv.hpp"
#include <chrono>
#include <ctime>
#include <iostream>
#include <thread>

#define ERROR_VIDEO_STREAM   1
#define ERROR_DUMP_FRAME     2

#define IMAGE_DUMP_DT_SEC    300
#define IMAGE_FOLDER         "images"

int main(int argc, char** argv)
{
  std::string input;
  if (argc > 1)
    input = argv[1];
  else
    input = "rtsp://physycom:ohnounapassWORD55@@CAMERA_IP@:554/rtpstream/config1=u";

  cv::VideoCapture vcap(input);
  if (!vcap.isOpened()) {
    std::cerr << "Error opening video stream or file : " << input << std::endl;
    exit(ERROR_VIDEO_STREAM);
  }

  cv::Mat frame;
  std::string frame_name;
  int frame_cnt = 0;
  for (;;) {
    vcap >> frame;
    frame_name = std::string(IMAGE_FOLDER) + "/@PEOPLEBOX_ID@_" + std::to_string(std::time(0)) + ".jpg";
    if (imwrite(frame_name, frame))
      std::cout << "Frame " << frame_cnt++ << " (" << frame_name << ") dumped successfully" << std::endl;
    else {
      std::cerr << "Unable to write frame" << std::endl;
      exit(ERROR_DUMP_FRAME);
    }
    std::this_thread::sleep_for(std::chrono::seconds(IMAGE_DUMP_DT_SEC));
  }
  vcap.release();

  return 0;
}
